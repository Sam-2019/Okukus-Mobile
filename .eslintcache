[{"C:\\Users\\Mvjvw\\Desktop\\Okukus Mobile\\src\\App.js":"1","C:\\Users\\Mvjvw\\Desktop\\Okukus Mobile\\src\\Pages\\Order\\Order.js":"2"},{"size":590,"mtime":1612998994491,"results":"3","hashOfConfig":"4"},{"size":5750,"mtime":1612999280463,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"qzzo58",{"filePath":"9","messages":"10","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Mvjvw\\Desktop\\Okukus Mobile\\src\\App.js",["12","13","14"],"import styled from \"styled-components\";\nimport Okukus from \"./Pages/Okukus\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n  useQuery,\n  useQueryCache,\n  useMutation,\n  QueryCache,\n  ReactQueryCacheProvider,\n} from \"react-query\";\nimport \"./Pages/okukus.css\";\n\nconst AppBackgroundColour = styled.div`\n  background: #ababab3c;\n`;\n\nconst queryCache = new QueryCache();\n\nfunction App() {\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <AppBackgroundColour>\n        <Okukus />\n      </AppBackgroundColour>\n    </ReactQueryCacheProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Mvjvw\\Desktop\\Okukus Mobile\\src\\Pages\\Order\\Order.js",["15","16","17","18","19"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Back from \"../Components/Back\";\r\nimport { Input } from \"../Components/Input\";\r\nimport Button from \"../Components/Button\";\r\nimport Home from \"../Components/Home\";\r\nimport Message from \"../Components/Message\";\r\nimport Summary from \"../Summary/Summary\";\r\nimport PopUp from \"../Components/Popup\";\r\nimport Question from \"../Components/Question\";\r\nimport Success from \"../Components/Success Container\";\r\nimport Select from \"../Components/Select\";\r\n\r\nimport \"./order.css\";\r\n\r\nconst Order = () => {\r\n  let amount = 10000;\r\n  let quantity = 100;\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  const [paymentMethod, setPaymentMethod] = React.useState(\"\");\r\n  const [state, setState] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n\r\n  const showSuccess = () => {\r\n    setSuccess(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setSuccess(false);\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n  };\r\n\r\n  let selectedOption = null;\r\n\r\n  switch (paymentMethod) {\r\n    case \"Cash\":\r\n      selectedOption = \"cash\";\r\n      break;\r\n    case \"Momo\":\r\n      selectedOption = \"momo\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart-wrapper\">\r\n      <div className=\"header \">\r\n        <div className=\"category \">\r\n          <div className=\"object-1\">\r\n            <Back width={30} height={30} />\r\n          </div>\r\n          <div className=\"object-2\"> Order</div>\r\n        </div>\r\n      </div>\r\n\r\n      {state ? (\r\n        <PopUp close={() => setState(false)}>\r\n          <ol className=\"\">\r\n            <li>Dial *170# on your phone</li>\r\n            <li>Select MoMoPay &amp; PayBill</li>\r\n            <li>Select MoMoPay</li>\r\n            <li>\r\n              Enter <strong>283051 </strong> as the Merchant ID\r\n            </li>\r\n            <li>Enter Reference</li>\r\n            <li>Enter Your Pin to confirm payment</li>\r\n          </ol>\r\n\r\n          <div className=\"other-info\">\r\n            Upon successful payment, please use the details of the payment to\r\n            fill the fields below\r\n          </div>\r\n\r\n          {/* <Button class_name=\"primary\" name=\"Okay\" /> */}\r\n          <div className=\"popup-action\">\r\n            <Button\r\n              class_name=\"primary\"\r\n              name=\"Close\"\r\n              action={() => setState(false)}\r\n            />\r\n          </div>\r\n        </PopUp>\r\n      ) : null}\r\n\r\n      <div className=\"main-1\">\r\n        <form className=\" wrapper-item\">\r\n          <div className=\"page_title\"> Shipping Information</div>\r\n          <Select />\r\n          <Input class_name=\"input \" placeholder=\"Location\" onChange />\r\n          <Input class_name=\"input \" placeholder=\"Digital Address\" onChange />\r\n          <Input class_name=\"input \" placeholder=\"Phone Number\" onChange />\r\n\r\n          <div className=\"page_title\">Payment</div>\r\n          <div className=\"payment-method\">\r\n            <div\r\n              className={selectedOption === \"cash\" ? \"cash\" : \"select\"}\r\n              onClick={() => {\r\n                setPaymentMethod(\"Cash\");\r\n              }}\r\n            >\r\n              Cash\r\n            </div>\r\n            <div\r\n              className={selectedOption === \"momo\" ? \"momo\" : \"select\"}\r\n              onClick={() => {\r\n                setPaymentMethod(\"Momo\");\r\n              }}\r\n            >\r\n              Momo\r\n            </div>\r\n          </div>\r\n\r\n          {selectedOption === \"momo\" ? (\r\n            <>\r\n              <div className=\"payment-instruction \">\r\n                <div className=\"pay-know-how \">\r\n                  <div>HOW TO PAY WITH MOMO</div>\r\n                  <Question\r\n                    width={30}\r\n                    height={30}\r\n                    action={() => {\r\n                      setState(true);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <Input class_name=\"input \" placeholder=\"Name\" onChange />\r\n                <Input class_name=\"input \" placeholder=\"Momo Number\" onChange />\r\n                <Input\r\n                  class_name=\"input \"\r\n                  placeholder=\"Transaction ID\"\r\n                  onChange\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </form>\r\n\r\n        <Summary>\r\n          <div className=\"amountXshipping\">\r\n            <div className=\"amount \">Total ${amount}</div>\r\n            <div className=\"amount \">Total ${amount}</div>\r\n          </div>\r\n\r\n          <Button\r\n            class_name=\"checkout\"\r\n            name={`Check Out  (${quantity})`}\r\n            action={() => {\r\n              history.push(`/order/${id}`);\r\n              setSuccess(true);\r\n            }}\r\n          />\r\n        </Summary>\r\n      </div>\r\n\r\n      {success ? (\r\n        <Success close={() => setSuccess(false)}>\r\n          <div className=\"order-success\">\r\n            <div>\r\n              {/* Hi <span className=\"customer-name\">Kenneth Akanpaacharuk</span>, */}\r\n            </div>{\" \"}\r\n            Thank you for shopping with us! Your order{\" \"}\r\n            <span className=\"orderID\">11111111111</span> has been placed,\r\n            pending confirmation. We will call you within 24 hours (calling\r\n            hours: Mon-Fri 8:30am-5:30pm) to confirm your order . Once the order\r\n            is confirmed, you will not be able to change your order details (e.g\r\n            recipient, delivery address).\r\n          </div>\r\n\r\n          <Button\r\n            name=\"Go Home\"\r\n            class_name=\"primary\"\r\n            action={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          />\r\n        </Success>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Order;\r\n",{"ruleId":"20","severity":1,"message":"21","line":5,"column":3,"nodeType":"22","messageId":"23","endLine":5,"endColumn":11},{"ruleId":"20","severity":1,"message":"24","line":6,"column":3,"nodeType":"22","messageId":"23","endLine":6,"endColumn":16},{"ruleId":"20","severity":1,"message":"25","line":7,"column":3,"nodeType":"22","messageId":"23","endLine":7,"endColumn":14},{"ruleId":"20","severity":1,"message":"26","line":2,"column":8,"nodeType":"22","messageId":"23","endLine":2,"endColumn":17},{"ruleId":"20","severity":1,"message":"27","line":7,"column":8,"nodeType":"22","messageId":"23","endLine":7,"endColumn":12},{"ruleId":"20","severity":1,"message":"28","line":8,"column":8,"nodeType":"22","messageId":"23","endLine":8,"endColumn":15},{"ruleId":"20","severity":1,"message":"29","line":26,"column":9,"nodeType":"22","messageId":"23","endLine":26,"endColumn":20},{"ruleId":"30","severity":1,"message":"31","line":37,"column":3,"nodeType":"32","messageId":"33","endLine":43,"endColumn":4},"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'useQueryCache' is defined but never used.","'useMutation' is defined but never used.","'PropTypes' is defined but never used.","'Home' is defined but never used.","'Message' is defined but never used.","'showSuccess' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]